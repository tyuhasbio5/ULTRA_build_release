name: Build and Release

on:
  workflow_run:
        workflows: ['Build and Test']
        types: [completed]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # build for ubuntu and mac
        arch: [x64, arm] # x64 and arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up build environment
        run: |
          if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
            sudo apt-get update
            sudo apt-get install -y autoconf gcc make
          elif [ ${{ matrix.os }} == 'macos-latest' ]; then
            brew install autoconf gcc make
          fi
      - name: cmake
        run: cmake .

      - name: Build
        run: |
          make
          mkdir -p installation/usr/local/bin
          cd src && make install DESTDIR=../installation
      - name: Extract version from github.ref
        id: extract_version
        run: echo "::set-output name=version::$(echo ${GITHUB_REF#refs/tags/})"

      - name: Create tar.gz archive # binaries listed here
        run: |
          cd installation/usr/local/bin
          tar -czvf ../../../ULTRA-${{ steps.extract_version.outputs.version }}.${{ matrix.os }}.${{ matrix.arch }}.tar.gz ultra
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ULTRA-${{ matrix.os }}-${{ matrix.arch }}
          path: installation/ULTRA-${{ steps.extract_version.outputs.version }}.${{ matrix.os }}.${{ matrix.arch }}.tar.gz
          if-no-files-found: error

  release:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x64, arm] # x64 and arm
    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ULTRA-${{ matrix.os }}-${{ matrix.arch }}
          path: ./artifacts

      - name: List files in artifacts directory
        run: |
          echo "Listing files in ./artifacts:"
          ls -l ./artifacts
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./artifacts/ULTRA-${{ matrix.os }}-${{ matrix.arch }}/*
          tag_name: ${{ steps.extract_version.outputs.version }}
          name: Release ${{ steps.extract_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
